# 学用circle画圆形。

from tkinter import *
#主程序入口：
if __name__ == '__main__':
    #创建一个主窗口对象 root，它是所有 Tkinter GUI 的根容器。
    #Tk() 是 tkinter 的构造函数，启动了 GUI 的主事件循环。
    root = Tk()
    #创建画布组件：
    canvas = Canvas(root, width = 800, height = 600, bg = 'yellow')  # bg是 background（背景）的缩写
    '''
    fill 参数 控制组件是否以及如何扩展其分配的空间。它可以接受以下四个值之一：
    NONE: 组件不会扩展，默认行为。
    X: 组件将沿水平方向扩展以填充额外的宽度。
    Y: 组件将沿垂直方向扩展以填充额外的高度。
    BOTH: 组件将同时沿水平和垂直两个方向扩展，完全填充其分配的空间。
    '''
    # .pack() 方法属于一种简单的布局管理器，它会自动将控件按照添加的顺序放置到父容器（如窗口或框架）中，并调整其大小以适应内容。
    # 显示画布：
    canvas.pack(expand = YES, fill = BOTH)
    #初始化变量：
    k = 1  #当前圆的半径
    j = 1  #每次增加的步长值
    #循环 26 次，每次画一个椭圆（在这里是正圆）：
    for i in range(0,26):
        '''
        (400 - k, 300 - k)：左上角的横坐标
        (400 + k, 300 + k)：右下角的横坐标
        整体形成以 (400, 300) 为中心、半径为 k 的圆形。
        width=1：圆边框宽度为 1 像素。
        '''
        '''
        Tkinter 中的 create_oval() 函数
        在 Tkinter 的 Canvas 上，使用 create_oval(x0, y0, x1, y1, ...) 来绘制椭圆（oval），
        当你传入的是正方形区域的左上角和右下角坐标时，它就会画出一个圆形。
        参数含义：
        x0, y0: 左上角坐标
        x1, y1: 右下角坐标
        这实际上定义了一个边长为 2k 的正方形区域：
        宽度：(400 + k) - (400 - k) = 2k
        高度：(300 + k) - (300 - k) = 2k
        所以这是一个正方形区域。
        圆心在哪里？
        正方形的中心点就是它的对角线交点。
        横向中点：(x0 + x1) / 2 = (400 - k + 400 + k) / 2 = 400
        纵向中点：(y0 + y1) / 2 = (300 - k + 300 + k) / 2 = 300
        ✅ 所以，这个正方形的中心是 (400, 300)！

      🌟 半径是多少？
        因为正方形的每条边长是 2k，所以内切圆的直径就是 2k，那么半径就是：
        r = k
        '''
        canvas.create_oval(400 - k, 300 - k, 400 + k, 300 + k, width = 1)
        k += j  #半径增大
        j += 0.8  #让每次增加的幅度也越来越大，导致圆之间的间距越来越大（视觉上类似爆炸效果）

    #启动主事件循环:
    mainloop()