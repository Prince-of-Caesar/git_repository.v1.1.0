# 海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，这只猴子把多的一个扔入海中，拿走了一份。
# 第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中，拿走了一份，
# 第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？

'''

🧠 题目理解：
有五只猴子依次分桃子。
每次都把桃子平均分成五份，多出一个扔进海里。
然后拿走一份，剩下四份留给下一只猴子。
第五只猴子操作完后也必须满足这个规则（即剩下的桃子还能再被分成五份，多一个）。
我们要找出：原来最少有多少个桃子？
'''

def find_min_peaches(n):
    """判断 n 是否能被五只猴子按规则分完"""
    for _ in range(5):
        if (n - 1) % 5 != 0:
            return False
        n = (n - 1) // 5 * 4  # 剩下4份
    return True

# 从1开始找最小的合法解
i = 1
while not find_min_peaches(i):
    i += 1
print("最小合法桃子数是：", i)